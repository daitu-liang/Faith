apply plugin: 'com.android.library'


android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath true //解决butterknife问题
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    api rootProject.ext.dependencies["annotationProcessor"]

    api rootProject.ext.dependencies["constraint_layout"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["cardview-v7"]
    api rootProject.ext.dependencies["annotations"]

    api rootProject.ext.dependencies["butterknife"]
    api rootProject.ext.dependencies["butterknife-compiler"]

    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava"]
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["glide"]

    api rootProject.ext.dependencies["arouter-api"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]//各module需再次引入



    api rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]//各module需再次引入
    api rootProject.ext.dependencies["dagger-android"]
    api rootProject.ext.dependencies["dagger-android-support"]
    annotationProcessor rootProject.ext.dependencies["dagger-android-processor"]

}

//

group 'com.nbfox.component_base'
version '1.0.0'


//源代码打包任务
task sourcesJar(type :Jar){
    classifier 'sources' //分类器 区分其他jar包
    from android.sourceSets.main.java.srcDirs
}
//创建文档生成任务
task javadoc(type:Javadoc){
    options.encoding="utf-8"//解决 JavaDoc 中文注释生成失败的问题
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//配置 工程工件 jar产出的配置
artifacts {
    archives javadocJar
    archives sourcesJar
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

bintray {
    user = 'lxliang1101'  //用户名
    key = '10e4d2bd999f06b7a52ebed8c311b62b7a2b425d'  //上一步获取的Api key
    configurations = ['archives']
    pkg {
        repo = 'faith_base' //需要上传的仓库名
        name = 'component_base'  //上传的项目名
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/daitu-liang/Faith.git'//github对应地址，可以不写
        version {
            desc = 'fatih come out'
            released  = new Date()
            vcsTag = '1.0'
            attributes = ['gradle-plugin': '1.5']
        }
    }

}


install {
    repositories.mavenInstaller {
        //配置pom文件
        pom.project {
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }
}
/*
//指定编译的编码
tasks.withType(Javadoc){
    options.encoding = "UTF-8"
}*/
